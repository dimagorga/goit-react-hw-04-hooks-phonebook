{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactsList/ContactsList.module.css","Components/Filter/Filter.module.css","Components/Button/Button.module.css","Components/Button/Button.jsx","Components/ContactForm/ContactForm.jsx","Components/ContactsList/ContactsList.jsx","Components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","Button","type","buttonName","handleClick","id","className","s","button","onClick","ContactForm","handleSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","form","onSubmit","preventDefault","uuidv4","htmlFor","input","onChange","pattern","title","required","ContactsList","contactsList","handleRemove","list","map","item","currentTarget","Filter","label","App","JSON","parse","localStorage","getItem","contacts","setContacts","filter","setFilter","useEffect","window","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","nextContact","some","toLocaleLowerCase","alert","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a0df84a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Vaon\",\"input\":\"ContactForm_input__HsHak\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__30JHb\",\"item\":\"ContactsList_item__1XTDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__19PNJ\",\"input\":\"Filter_input__1gar8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3SAVA\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Button.module.css\";\r\nfunction Button({ type, buttonName, handleClick, id }) {\r\n  return (\r\n    <button className={s.button} onClick={handleClick} id={id} type={type}>\r\n      {buttonName}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  buttonName: PropTypes.string,\r\n  handleClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport Button from \"../Button/Button\";\r\n\r\nfunction ContactForm({ handleSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSubmit({ name, number, id: uuidv4() });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={onSubmit}>\r\n      <label htmlFor={uuidv4()}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label htmlFor={uuidv4()}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          onChange={handleChange}\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <Button type=\"submit\" buttonName=\"Add contact\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactsList.module.css\";\r\nimport Button from \"../Button/Button\";\r\n\r\nfunction ContactsList({ contactsList, handleRemove }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contactsList.map(({ id, name, number }) => {\r\n        return (\r\n          <li className={s.item} key={id}>\r\n            <p>\r\n              {name}: {number}{\" \"}\r\n            </p>\r\n            <Button\r\n              type=\"button\"\r\n              handleClick={(e) => {\r\n                handleRemove(e.currentTarget.id);\r\n              }}\r\n              buttonName=\"Delete\"\r\n              id={id}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nContactsList.propTypes = {\r\n  contactsList: PropTypes.array,\r\n  handleRemove: PropTypes.func,\r\n};\r\n\r\nexport default ContactsList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction Filter({ onChange }) {\r\n  return (\r\n    <label className={s.label} htmlFor={uuidv4()}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        name=\"filter\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from \"react\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactsList from \"./Components/ContactsList/ContactsList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport \"./App.css\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    ...(JSON.parse(localStorage.getItem(\"contacts\")) ?? \"\"),\n  ]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (nextContact) => {\n    const sameName = contacts.some(\n      (contact) =>\n        contact.name.toLocaleLowerCase() ===\n        nextContact.name.toLocaleLowerCase()\n    );\n    if (sameName) {\n      alert(`${nextContact.name} is already in contacts`);\n    } else {\n      setContacts((prevState) => [nextContact, ...prevState]);\n    }\n  };\n\n  const handleRemove = (id) => {\n    setContacts((prevState) => {\n      return prevState.filter((contact) => contact.id !== id);\n    });\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) => {\n      return contact.name.toLowerCase().includes(normalizedFilter);\n    });\n  };\n\n  const visibleContacts = getVisibleContacts();\n  return (\n    <div className=\"container\">\n      <h1 className=\"mainTitle\">Phonebook</h1>\n      <ContactForm handleSubmit={addContact} />\n      <h2 className=\"contactsTitle\">Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactsList\n        contactsList={visibleContacts}\n        handleRemove={handleRemove}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}